# -*- org-confirm-babel-evaluate: nil -*-

#+STARTUP: content
#+OPTIONS: toc:nil

#+BEGIN_EXPORT html
[![Build Status](https://travis-ci.org/sboehler/beans.svg?branch=master)](https://travis-ci.org/sboehler/beans)
#+END_EXPORT

* beans - A Plain-Text Accounting Tool

~beans~ is a [[https://plaintextaccounting][plain text accounting tool]] in the tradition of [[https://www.ledger-cli.org][ledger]],
[[https://hledger.org][hledger]] and [[https://furius.ca/beancount/][beancount]].

** Track your net worth

Print a formatted balance sheet in USD:

#+NAME: balance
#+BEGIN_SRC sh :exports both :results output :var PATH="./dist/build/beans"
  beans balanceSheet -j examples/example.bean
#+END_SRC

Output:

#+RESULTS: balance
#+begin_example
|-------------+----------+-----------+--------------------+----------+-----------|
| Account     | Amount   | Commodity | Account            | Amount   | Commodity |
|-------------+----------+-----------+--------------------+----------+-----------|
| Assets      |    10.00 | AAPL      | Equity             | 19800.00 | USD       |
|             |     0.25 | BTC       |   OpeningBalance   | 15000.00 | USD       |
|             | 14600.00 | USD       |   RetainedEarnings |  4800.00 | USD       |
|   Checking  | 14600.00 | USD       |                    |          |           |
|   Portfolio |    10.00 | AAPL      |                    |          |           |
|   Wallet    |     0.25 | BTC       |                    |          |           |
|-------------+----------+-----------+--------------------+----------+-----------|
| Total       |    10.00 | AAPL      | Total              | 19800.00 | USD       |
|             |     0.25 | BTC       |                    |          |           |
|             | 14600.00 | USD       |                    |          |           |
|-------------+----------+-----------+--------------------+----------+-----------|

#+end_example


** Convert arbitrary commodities and currencies

Convert all amounts to USD, using latest market prices:

#+NAME: convertedBalance
#+BEGIN_SRC sh :exports both :results output :var PATH="./dist/build/beans"
  beans balanceSheet -j examples/example.bean -m USD
#+END_SRC

Output:

#+RESULTS: convertedBalance
#+begin_example
|-------------+----------+-----------+--------------------+----------+-----------|
| Account     | Amount   | Commodity | Account            | Amount   | Commodity |
|-------------+----------+-----------+--------------------+----------+-----------|
| Assets      | 18409.50 | USD       | Equity             | 18409.50 | USD       |
|   Checking  | 14600.00 | USD       |   OpeningBalance   | 15000.00 | USD       |
|   Portfolio |  2220.00 | USD       |   RetainedEarnings |  4800.00 | USD       |
|   Wallet    |  1589.50 | USD       |   Valuation        | -1390.50 | USD       |
|-------------+----------+-----------+--------------------+----------+-----------|
| Total       | 18409.50 | USD       | Total              | 18409.50 | USD       |
|-------------+----------+-----------+--------------------+----------+-----------|

#+end_example

Convert all amounts to bitcoin, using latest market prices:

#+NAME: convertedBalanceBTC
#+BEGIN_SRC sh :exports both :results output :var PATH="./dist/build/beans"
  beans balanceSheet -j examples/example.bean -m BTC
#+END_SRC

Output:

#+RESULTS: convertedBalanceBTC
#+begin_example
|-------------+--------+-----------+--------------------+--------+-----------|
| Account     | Amount | Commodity | Account            | Amount | Commodity |
|-------------+--------+-----------+--------------------+--------+-----------|
| Assets      |   2.90 | BTC       | Equity             |   2.90 | BTC       |
|   Checking  |   2.30 | BTC       |   OpeningBalance   |   1.12 | BTC       |
|   Portfolio |   0.35 | BTC       |   RetainedEarnings |   0.45 | BTC       |
|   Wallet    |   0.25 | BTC       |   Valuation        |   1.32 | BTC       |
|-------------+--------+-----------+--------------------+--------+-----------|
| Total       |   2.90 | BTC       | Total              |   2.90 | BTC       |
|-------------+--------+-----------+--------------------+--------+-----------|

#+end_example


** Use flexible rules to assign accounts automatically

Take a sample bank statement:

#+INCLUDE: "./examples/quick/postfinance.csv" src raw

Create a set of rules:

#+INCLUDE: "./examples/quick/example.rules" src raw

Import the statement and assign accounts to bookings:

#+NAME: beans-import
#+BEGIN_SRC sh :exports both :results output :var PATH="./dist/build/beans"
  beans import -i ch.postfinance -c examples/quick/example.rules -a Assets:Checking examples/quick/postfinance.csv
#+END_SRC

Output:

#+RESULTS: beans-import
: 2017-06-01 * "Acme Corp"
:   Assets:Checking -135.00 CHF
:   Expenses:Groceries 135.00 CHF
:


** Other features

- flexible analysis and filtering
- built-in set of importers (pull requests welcome)
- written in Haskell

Check out the [[https://sboehler.github.io/beans][manual]]!


** License

BSD-3
