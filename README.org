# -*- org-confirm-babel-evaluate: nil -*-

#+STARTUP: content
#+OPTIONS: toc:nil

#+BEGIN_EXPORT html
[![Build Status](https://travis-ci.org/sboehler/beans.svg?branch=master)](https://travis-ci.org/sboehler/beans)
#+END_EXPORT

#+PROPERTY: header-args:sh :var PATH="./result/bin" :exports both :results output verbatim

* beans - A Plain-Text Accounting Tool

~beans~ is a [[https://plaintextaccounting][plain text accounting tool]] in the tradition of [[https://www.ledger-cli.org][ledger]],
[[https://hledger.org][hledger]] and [[https://furius.ca/beancount/][beancount]]. Read the overview below, or check out the
[[https://sboehler.github.com/beans][manual]] for details!

** Track your net worth

Print a formatted balance sheet in USD:

#+NAME: balance
#+BEGIN_SRC sh
  beans balance -j examples/example.bean
#+END_SRC

Output:

#+RESULTS: balance
#+begin_example
|------------------+------------+------------|
| Account          | 2018-01-01 | 2018-11-01 |
|------------------+------------+------------|
| Assets           |            |            |
|   Checking       |            |            |
|     USD          |   15000.00 |   14600.00 |
|   Portfolio      |            |            |
|     AAPL         |            |      10.00 |
|   Wallet         |            |            |
|     BTC          |            |       0.25 |
|------------------+------------+------------|
| Equity           |            |            |
|   Gains          |            |            |
|     AAPL         |            |     -10.00 |
|     BTC          |            |      -0.25 |
|     USD          |            |    5200.00 |
|   OpeningBalance |            |            |
|     USD          |  -15000.00 |  -15000.00 |
|------------------+------------+------------|
| Income           |            |            |
|   Salary         |            |            |
|     USD          |            |  -12000.00 |
|------------------+------------+------------|
| Expenses         |            |            |
|   Books          |            |            |
|     USD          |            |     100.00 |
|   Groceries      |            |            |
|     USD          |            |    1100.00 |
|   Rent           |            |            |
|     USD          |            |    6000.00 |
|------------------+------------+------------|
| Total            |            |            |
|   AAPL           |            |            |
|   BTC            |            |            |
|   USD            |            |            |
|------------------+------------+------------|

#+end_example


** Convert arbitrary commodities and currencies

Convert all amounts to USD, using latest market prices:

#+NAME: convertedBalance
#+BEGIN_SRC sh
  beans balance -j examples/example.bean --val USD
#+END_SRC

Output:

#+RESULTS: convertedBalance
#+begin_example
|------------------+------------+------------|
| Account          | 2018-01-01 | 2018-11-01 |
|------------------+------------+------------|
| Assets           |            |            |
|   Checking       |   15000.00 |   14600.00 |
|   Portfolio      |            |    2220.00 |
|   Wallet         |            |    1589.50 |
|------------------+------------+------------|
| Equity           |            |            |
|   Equity         |            |    1233.50 |
|   Gains          |            |     157.00 |
|   OpeningBalance |  -15000.00 |  -15000.00 |
|------------------+------------+------------|
| Income           |            |            |
|   Salary         |            |  -12000.00 |
|------------------+------------+------------|
| Expenses         |            |            |
|   Books          |            |     100.00 |
|   Groceries      |            |    1100.00 |
|   Rent           |            |    6000.00 |
|------------------+------------+------------|
| Total            |            |            |
|------------------+------------+------------|

#+end_example

Convert all amounts to bitcoin, using latest market prices:

#+NAME: convertedBalanceBTC
#+BEGIN_SRC sh
  beans balance -j examples/example.bean --val BTC
#+END_SRC

Output:

#+RESULTS: convertedBalanceBTC
#+begin_example
|------------------+------------+------------|
| Account          | 2018-01-01 | 2018-11-01 |
|------------------+------------+------------|
| Assets           |            |            |
|   Checking       |       1.12 |       2.30 |
|   Portfolio      |            |       0.35 |
|   Wallet         |            |       0.25 |
|------------------+------------+------------|
| Equity           |            |            |
|   Equity         |            |      -1.34 |
|   Gains          |            |       0.01 |
|   OpeningBalance |      -1.12 |      -1.12 |
|------------------+------------+------------|
| Income           |            |            |
|   Salary         |            |      -1.11 |
|------------------+------------+------------|
| Expenses         |            |            |
|   Books          |            |       0.01 |
|   Groceries      |            |       0.09 |
|   Rent           |            |       0.55 |
|------------------+------------+------------|
| Total            |       0.00 |       0.00 |
|------------------+------------+------------|

#+end_example


** Importers and Bayesian Inference

Take a sample bank statement:

#+INCLUDE: "./examples/quick/postfinance.csv" src raw

Import the statement and assign accounts to bookings:

#+NAME: beans-import
#+BEGIN_SRC sh
  beans import -i ch.postfinance -a Assets:Checking examples/quick/postfinance.csv
#+END_SRC

Output:
#+RESULTS: beans-import
: 2017-06-01 "Acme Corp"
: Assets:Checking -135 CHF
: TBD 135 CHF

Use Bayesian inference (aka "machine learning") to automatically
assign accounts to the TBD account. Use your journal both as training
and target file, and ~beans~ will replace TBD accounts with its best
guess, based on your existing data.

#+NAME: beans-infer
#+BEGIN_SRC sh
  beans infer --help
#+END_SRC

#+RESULTS: beans-infer
: Usage: beans infer (-t|--training-file TRAINING_FILE) TARGET_FILE
:   Infer accounts
:
: Available options:
:   -t,--training-file TRAINING_FILE
:                            The file containing the training data
:   -h,--help                Show this help text

#+RESULTS: beans-import
: 2017-06-01 "Acme Corp"
: Assets:Checking -135 CHF
: TBD 135 CHF

** Import data from Yahoo! and AlphaVantage
~beans~ has built-in fetchers for prices from Yahoo! and
AlphaVantage. Provide a configuration in ~dhall~ (see example) and
~beans~ will keep up-to-date price files on request.

#+NAME: beans-fetch
#+BEGIN_SRC sh
  beans fetch --help
#+END_SRC

#+RESULTS: beans-fetch
: Usage: beans fetch [-c|--commodities COMMODITY] CONFIG_FILE
:   Fetch latest prices
:
: Available options:
:   -c,--commodities COMMODITY
:                            The commodity to fetch
:   CONFIG_FILE              The dhall config file to parse
:   -h,--help                Show this help text

** Other features

- flexible analysis and filtering
- written in Haskell

Check out the [[https://sboehler.github.io/beans][manual ]]!


** License

BSD-3
